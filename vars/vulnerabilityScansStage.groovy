#!/usr/bin/env groovy
import com.ge.nola.BanzaiCfg
import com.ge.nola.BanzaiVulnerabilityCfg

def call(BanzaiCfg cfg) {
    if (cfg.vulnerabilityScans == null) { return }

    def stageName = 'Vulnerability Scans'
    List<BanzaiVulnerabilityCfg>> vulnerabilityScanCfgs = getBranchBasedConfig(cfg.vulnerabilityScans)
  
    if (vulnerabilityScanCfgs == null) {
        logger "${BRANCH_NAME} does not match a 'vulnerabilityScans' branch pattern. Skipping ${stageName}"
        return
    }

    stage (stageName) {
        try {
            notify(cfg, stageName, 'Pending', 'PENDING')
            vulnerabilityScans(cfg, vulnerabilityScanCfgs)
            notify(cfg, stageName, 'Successful', 'PENDING')
        } catch (err) {
            echo "Caught: ${err}"
            notify(cfg, stageName, 'Failed', 'FAILURE')

            // abort if all vulnerability scans should result in abort OR
            // if this specific scan is configured to abort
            if (cfg.vulnerabilityAbortOnError || err.message == "true") {
                currentBuild.result = 'ABORTED'
                error(err.message)
            } else {
                currentBuild.result = 'UNSTABLE'
            }
        }
    }
}
