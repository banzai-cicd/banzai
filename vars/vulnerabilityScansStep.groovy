#!/usr/bin/env groovy

def call(config) {

    if (config.vulnerabilityScans) {
        // check and see if the current branch matches the config
        def configKey = config.vulnerabilityScans.keySet().find { BRANCH_NAME ==~ it }
        if (!configKey) {
            logger "vulnerabilityScans does not contain an entry that matches the branch: ${BRANCH_NAME}"
            return
        }

        def scansConfig = config.vulnerabilityScans[configKey]

        try {
            notify(config, 'Vulnerability Scans', 'Pending', 'PENDING')
            vulnerabilityScans(config, scansConfig)
            notify(config, 'Vulnerability Scans', 'Successful', 'PENDING')
        } catch (err) {
            echo "Caught: ${err}"
            notify(config, 'Vulnerability Scans', 'Failed', 'FAILURE')

            if (config.vulnerabilityAbortOnFailure) {
                currentBuild.result = 'ABORTED'
                error(err.message)
            } else {
                currentBuild.result = 'UNSTABLE'
            }
        }
    }

}
